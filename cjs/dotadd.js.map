{"version":3,"sources":["../build/dotadd.js"],"names":["Filter","constructor","high","low","hi","lo","isLowpass","undefined","isHighpass","isBandpass","fromObject","obj","Matrix","input","channels","length","csize","channel","Error","matrix","setInput","getInput","numCoeffs","numChannels","setCoeffsForChannel","chan","coeffs","getCoeffsForChannel","ambisonicOrder","Math","floor","sqrt","AEDCoord","a","e","d","hasDistance","OutputChannel","name","type","options","description","coords","ADD","add","pobj","String","JSON","parse","toString","Object","decoder","filter","matrices","output","assign_if_valid","map","mat","validateProp","prop","validator","from","to","assign_if_valid_recurse","me","props","hasOwnProperty","nextp","shift","valid","addMatrix","push","addFilter","flt","addOutput","out","gain","index","maxAmbisonicOrder","max","totalMatrixOutputs","reduce","val","maxMatrixOutputs","createDefaultOutputs","forEach","midx","i","arr","Array","fill","createDefaultSummedOutputs"],"mappings":"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","sourcesContent":["export class Filter {\n    constructor(high, low) {\n        this.hi = high;\n        this.lo = low;\n    }\n    isLowpass() {\n        return this.lo == undefined && this.hi != undefined;\n    }\n    isHighpass() {\n        return this.hi == undefined && this.lo != undefined;\n    }\n    isBandpass() {\n        return this.hi != undefined && this.lo != undefined;\n    }\n    static fromObject(obj) {\n        return new Filter(obj.hi, obj.lo);\n    }\n}\n/**\n * The dotadd Matrix class. Is holds the decoding matrix coefficents and a field\n * which specifies the input band it receives audio from\n */\nexport class Matrix {\n    /**\n     * Construct a new Matrix.\n     * @param {number} input the input band the matrix will receive signal from\n     * @param {number[][]} channels an array of array of coefficents for the output channels of the matrix.\n     */\n    constructor(input, channels) {\n        this.input = input;\n        if (channels && channels.length) {\n            let csize = channels[0].length;\n            for (let channel of channels) {\n                if (channel.length != csize)\n                    throw new Error(\"channel size mismatch\");\n            }\n            this.matrix = channels;\n        }\n    }\n    /**\n     * Set the input band the Matrix will receive signal from\n     * @param {Number} input\n     */\n    setInput(input) {\n        this.input = input;\n    }\n    /**\n     * @returns {Number} the input channel this Matrix will receive signal from\n     */\n    getInput() {\n        return this.input;\n    }\n    /**\n     * @returns {Number} the input number of coeffs for each channel\n     */\n    numCoeffs() {\n        if (this.matrix)\n            return this.matrix[0].length;\n        else\n            return 0;\n    }\n    /**\n     * @returns the number of channels in the matrix\n     */\n    numChannels() {\n        if (this.matrix)\n            return this.matrix.length;\n        else\n            return 0;\n    }\n    /**\n     * set the coefficents for a channels in the Matrix\n     * @param {Number} chan the channel number to set\n     * @param {Array<Number>} coeffs an array of coefficents\n     */\n    setCoeffsForChannel(chan, coeffs) {\n        if (!(this.matrix))\n            this.matrix = [];\n        this.matrix[chan] = coeffs;\n    }\n    /**\n * get the coefficents for a channel in the Matrix\n * @param {number} chan the channel number\n * @returns {number[]} an array of coefficents\n */\n    getCoeffsForChannel(chan) {\n        if (!(this.matrix))\n            return;\n        return this.matrix[chan];\n    }\n    ambisonicOrder() {\n        return Math.floor(Math.sqrt(this.numCoeffs())) - 1;\n    }\n    static fromObject(obj) {\n        return new Matrix(obj.input, obj.matrix);\n    }\n}\nexport class AEDCoord {\n    constructor(a, e, d) {\n        this.a = a;\n        this.e = e;\n        this.d = d;\n    }\n    hasDistance() {\n        return this.d != null;\n    }\n}\nexport class OutputChannel {\n    constructor(name, type, options) {\n        this.name = name;\n        this.type = type;\n        if (options) {\n            this.description = options.description;\n            this.coords = options.coords;\n        }\n    }\n    static fromObject(obj) {\n        return new OutputChannel(obj.name, obj.type);\n    }\n}\nexport class ADD {\n    constructor(add) {\n        let pobj = {};\n        if (typeof add == 'string' || add instanceof String)\n            pobj = JSON.parse(add.toString());\n        else if (add instanceof Object)\n            pobj = add;\n        this.decoder = { filter: [], matrices: [], output: { channels: [], matrix: [] } };\n        if (add) {\n            this.assign_if_valid(pobj, 'number', 'revision');\n            this.assign_if_valid(pobj, 'string', 'name');\n            this.assign_if_valid(pobj, 'string', 'author');\n            this.assign_if_valid(pobj, 'string', 'description');\n            this.assign_if_valid(pobj, 'string', 'date');\n            this.assign_if_valid(pobj, 'number', 'version');\n            if (pobj.decoder) {\n                if (pobj.decoder.filter)\n                    this.decoder.filter = pobj.filter.map(obj => Filter.fromObject(obj));\n                if (pobj.decoder.matrices)\n                    this.decoder.matrices = pobj.decoder.matrices.map(mat => Matrix.fromObject(mat));\n                if (pobj.decoder.output.channels && pobj.decoder.output.matrix) {\n                    this.decoder.output = {\n                        channels: pobj.decoder.output.channels.map(channel => OutputChannel.fromObject(channel)),\n                        matrix: pobj.decoder.matrix\n                    };\n                }\n            }\n        }\n    }\n    validateProp(prop, validator) {\n        if (typeof validator == 'string')\n            return typeof prop == validator;\n        else\n            return validator(prop);\n    }\n    assign_if_valid(from, validator, ...prop) {\n        let to = this;\n        this.assign_if_valid_recurse(to, from, validator, prop);\n    }\n    assign_if_valid_recurse(me, from, validator, props) {\n        if (props.length === 1) {\n            if (from.hasOwnProperty(props[0]) && this.validateProp(from[props[0]], validator))\n                me[props[0]] = from[props[0]];\n        }\n        else {\n            let nextp = props.shift();\n            if (from.hasOwnProperty(nextp) && this.validateProp(from[nextp], 'object')) {\n                if (!me.hasOwnProperty(nextp))\n                    me[nextp] = {};\n                this.assign_if_valid_recurse(me[nextp], from[nextp], validator, props);\n            }\n        }\n    }\n    valid() {\n        return true;\n    }\n    addMatrix(mat) {\n        this.decoder.matrices.push(mat);\n    }\n    addFilter(flt) {\n        this.decoder.filter.push(flt);\n    }\n    addOutput(out, gain, index) {\n        if (gain == null)\n            gain = 1.0;\n        if (index == null)\n            index = this.decoder.output.channels.length;\n    }\n    maxAmbisonicOrder() {\n        return Math.max(...this.decoder.matrices.map(mat => mat.ambisonicOrder()));\n    }\n    totalMatrixOutputs() {\n        return this.decoder.matrices.reduce((val, mat) => val + mat.numChannels(), 0);\n    }\n    maxMatrixOutputs() {\n        return Math.max(...this.decoder.matrices.map(mat => mat.numChannels()));\n    }\n    createDefaultOutputs() {\n        this.decoder.matrices.forEach((mat, midx) => {\n            for (let i = 0; i < mat.numChannels(); ++i) {\n                this.decoder.output.channels.push(new OutputChannel(`DEFAULT_${midx}_${i}`, 'default'));\n                let arr = new Array(this.totalMatrixOutputs()).fill(0);\n                arr[i + ((midx) ? this.decoder.matrices[midx - 1].numChannels() : 0)] = 1.0;\n                this.decoder.output.matrix.push(arr);\n            }\n        });\n    }\n    createDefaultSummedOutputs() {\n        for (let i = 0; i < this.maxMatrixOutputs(); ++i) {\n            this.decoder.output.channels.push(new OutputChannel(`DEFAULT_${i}`, 'default'));\n            this.decoder.output.matrix[i] = new Array(this.totalMatrixOutputs()).fill(0);\n        }\n        this.decoder.matrices.forEach((mat, midx) => {\n            for (let i = 0; i < mat.numChannels(); ++i)\n                this.decoder.output.matrix[i][(i + ((midx) ? this.decoder.matrices[midx - 1].numChannels() : 0))] = 1.0;\n        });\n    }\n}\n"],"file":"dotadd.js"}