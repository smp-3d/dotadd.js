{"version":3,"sources":["../build/dotadd.js"],"names":["Filter","constructor","high","low","hi","lo","isLowpass","undefined","isHighpass","isBandpass","fromObject","obj","Matrix","input","channels","length","csize","channel","Error","matrix","setInput","getInput","numCoeffs","numChannels","setCoeffsForChannel","chan","coeffs","getCoeffsForChannel","AEDCoord","a","e","d","hasDistance","Output","name","type","options","description","coords","ADD","add","pobj","String","JSON","parse","toString","Object","assignIfExists","from","prop","to","assignIfExistsRecurse","me","props","hasOwnProperty","nextp","shift"],"mappings":"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","sourcesContent":["export class Filter {\n    constructor(high, low) {\n        this.hi = high;\n        this.lo = low;\n    }\n    isLowpass() {\n        return this.lo == undefined && this.hi != undefined;\n    }\n    isHighpass() {\n        return this.hi == undefined && this.lo != undefined;\n    }\n    isBandpass() {\n        return this.hi != undefined && this.lo != undefined;\n    }\n    static fromObject(obj) {\n        return new Filter(obj.hi, obj.lo);\n    }\n}\n/**\n * The dotadd Matrix class. Is holds the decoding matrix coefficents and a field\n * which specifies the input band it receives audio from\n */\nexport class Matrix {\n    /**\n     * Construct a new Matrix.\n     * @param {number} input the input band the matrix will receive signal from\n     * @param {number[][]} channels an array of array of coefficents for the output channels of the matrix.\n     */\n    constructor(input, channels) {\n        this.input = input;\n        if (channels && channels.length) {\n            let csize = channels[0].length;\n            for (let channel of channels) {\n                if (channel.length != csize)\n                    throw new Error(\"channel size mismatch\");\n            }\n            this.matrix = channels;\n        }\n    }\n    /**\n     * Set the input band the Matrix will receive signal from\n     * @param {Number} input\n     */\n    setInput(input) {\n        this.input = input;\n    }\n    /**\n     * @returns {Number} the input channel this Matrix will receive signal from\n     */\n    getInput() {\n        return this.input;\n    }\n    /**\n     * @returns {Number} the input number of coeffs for each channel\n     */\n    numCoeffs() {\n        if (this.matrix)\n            return this.matrix[0].length;\n        else\n            return 0;\n    }\n    /**\n     * @returns the number of channels in the matrix\n     */\n    numChannels() {\n        if (this.matrix)\n            return this.matrix.length;\n        else\n            return 0;\n    }\n    /**\n     * set the coefficents for a channels in the Matrix\n     * @param {Number} chan the channel number to set\n     * @param {Array<Number>} coeffs an array of coefficents\n     */\n    setCoeffsForChannel(chan, coeffs) {\n        if (!(this.matrix))\n            this.matrix = [];\n        this.matrix[chan] = coeffs;\n    }\n    /**\n * get the coefficents for a channel in the Matrix\n * @param {number} chan the channel number\n * @returns {number[]} an array of coefficents\n */\n    getCoeffsForChannel(chan) {\n        if (!(this.matrix))\n            return;\n        return this.matrix[chan];\n    }\n    static fromObject(obj) {\n        return new Matrix(obj.input, obj.matrix);\n    }\n}\nexport class AEDCoord {\n    constructor(a, e, d) {\n        this.a = a;\n        this.e = e;\n        this.d = d;\n    }\n    hasDistance() {\n        return this.d != null;\n    }\n}\nexport class Output {\n    constructor(name, type, options) {\n        this.name = name;\n        this.type = type;\n        if (options) {\n            this.description = options.description;\n            this.coords = options.coords;\n        }\n    }\n}\nexport class ADD {\n    constructor(add) {\n        let pobj = {};\n        if (!(add))\n            return;\n        else if (typeof add == 'string' || add instanceof String)\n            pobj = JSON.parse(add.toString());\n        else if (add instanceof Object)\n            pobj = add;\n        this.assignIfExists(pobj, 'number', 'revision');\n        this.assignIfExists(pobj, 'string', 'name');\n        this.assignIfExists(pobj, 'string', 'author');\n        this.assignIfExists(pobj, 'string', 'description');\n        this.assignIfExists(pobj, 'string', 'date');\n        this.assignIfExists(pobj, 'number', 'version');\n        this.assignIfExists(pobj, 'object', 'decoder', 'filter');\n    }\n    assignIfExists(from, type, ...prop) {\n        let to = this;\n        this.assignIfExistsRecurse(to, from, type, prop);\n    }\n    assignIfExistsRecurse(me, from, type, props) {\n        if (props.length === 1) {\n            if (from.hasOwnProperty(props[0]) && typeof from[props[0]] == type)\n                me[props[0]] == from[props[0]];\n        }\n        else {\n            let nextp = props.shift();\n            if (from.hasOwnProperty(nextp) && typeof from[nextp] == 'object') {\n                if (!me.hasOwnProperty(nextp))\n                    me[nextp] = {};\n                this.assignIfExistsRecurse(me[nextp], from[nextp], type, props);\n            }\n        }\n    }\n}\n"],"file":"dotadd.js"}